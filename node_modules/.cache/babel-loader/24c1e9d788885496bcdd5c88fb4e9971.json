{"ast":null,"code":"var _jsxFileName = \"/Users/jordanramkalawan/Documents/University/work/cse4234/project4 working/project4/project4/src/Components/RecipeCard/RecipeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport UserContext from \"../User/User\";\nimport Recipe from \"./Recipes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet init = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  mode: 'cors',\n  cache: 'default'\n};\n\nconst RecipeCard = _ref => {\n  _s();\n\n  let {\n    value,\n    data\n  } = _ref;\n  //defining user so we can use their data\n  const user = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipeData\",\n      children: //mapping through data passed from search component\n      data ? data.map(function (items) {\n        //Live search conditions for what the user enters\n        if (items.name.toLowerCase().includes(value.toLowerCase()) && value !== '' || items.description.toLowerCase().includes(value.toLowerCase()) && value !== '' || items.ingredients.toString().toLowerCase().includes(value.toLowerCase()) && value !== '') {\n          return (\n            /*#__PURE__*/\n            //sending information to the actual recipe card\n            _jsxDEV(Recipe, {\n              image: items.image,\n              Name: items.name,\n              cookT: items.cookTime,\n              prepT: items.prepTime,\n              ingredients: items.ingredients,\n              desc: items.description\n            }, items.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)\n          );\n        }\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeCard, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = RecipeCard;\nexport default RecipeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"sources":["/Users/jordanramkalawan/Documents/University/work/cse4234/project4 working/project4/project4/src/Components/RecipeCard/RecipeCard.js"],"names":["React","useContext","UserContext","Recipe","init","method","headers","mode","cache","RecipeCard","value","data","user","map","items","name","toLowerCase","includes","description","ingredients","toString","image","cookTime","prepTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,IAAIC,IAAI,GAAG;AACPC,EAAAA,MAAM,EAAE,KADD;AAEPC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GAFF;AAKPC,EAAAA,IAAI,EAAE,MALC;AAMPC,EAAAA,KAAK,EAAE;AANA,CAAX;;AASA,MAAMC,UAAU,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAkB;AAElC;AACA,QAAMC,IAAI,GAAGX,UAAU,CAACC,WAAD,CAAvB;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,IAA7B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEQ;AACAD,MAAAA,IAAI,GAAEA,IAAI,CAACE,GAAL,CACF,UAASC,KAAT,EAAgB;AACZ;AACA,YAAIA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCP,KAAK,CAACM,WAAN,EAAlC,KAA0DN,KAAK,KAAK,EAArE,IACKI,KAAK,CAACI,WAAN,CAAkBF,WAAlB,GAAgCC,QAAhC,CAAyCP,KAAK,CAACM,WAAN,EAAzC,KAAiEN,KAAK,KAAK,EADhF,IAEKI,KAAK,CAACK,WAAN,CAAkBC,QAAlB,GAA6BJ,WAA7B,GAA2CC,QAA3C,CAAoDP,KAAK,CAACM,WAAN,EAApD,KAA4EN,KAAK,KAAK,EAF9F,EAGA;AACI;AAAA;AACI;AACA,oBAAC,MAAD;AAEI,cAAA,KAAK,EAAII,KAAK,CAACO,KAFnB;AAGI,cAAA,IAAI,EAAIP,KAAK,CAACC,IAHlB;AAII,cAAA,KAAK,EAAID,KAAK,CAACQ,QAJnB;AAKI,cAAA,KAAK,EAAIR,KAAK,CAACS,QALnB;AAMI,cAAA,WAAW,EAAIT,KAAK,CAACK,WANzB;AAOI,cAAA,IAAI,EAAIL,KAAK,CAACI;AAPlB,eACWJ,KAAK,CAACC,IADjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAYH;AACJ,OApBC,CAAF,GAqBF;AAxBV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CArCD;;GAAMN,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, {useContext} from \"react\";\nimport UserContext from \"../User/User\";\nimport Recipe from \"./Recipes\";\n\n\nlet init = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    cache: 'default'\n};\n\nconst RecipeCard = ({value, data}) => {\n\n    //defining user so we can use their data\n    const user = useContext(UserContext);\n\n    return (\n        <UserContext.Provider value={user}>\n            <div className=\"recipeData\">\n                {\n                    //mapping through data passed from search component\n                    data? data.map(\n                        function(items) {\n                            //Live search conditions for what the user enters\n                            if((items.name.toLowerCase().includes(value.toLowerCase()) && value !== '')\n                                || (items.description.toLowerCase().includes(value.toLowerCase()) && value !== '')\n                                || (items.ingredients.toString().toLowerCase().includes(value.toLowerCase()) && value !== ''))\n                            {\n                                return (\n                                    //sending information to the actual recipe card\n                                    <Recipe\n                                        key = {items.name}\n                                        image = {items.image}\n                                        Name = {items.name}\n                                        cookT = {items.cookTime}\n                                        prepT = {items.prepTime}\n                                        ingredients = {items.ingredients}\n                                        desc = {items.description}\n                                    />\n                                )\n                            }\n                        }\n                    ):\"\"\n                }\n            </div>\n        </UserContext.Provider>\n    );\n\n}\n\nexport default RecipeCard;"]},"metadata":{},"sourceType":"module"}